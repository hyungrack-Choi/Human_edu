# 라이브러리 설치
# install.packages("패키지명")
# load 라이브러리
# 파이썬 라이브러리 숫자가 20만개 넘음
# R, 2만개 미만
library(ggplot2)
data("mpg")
str(mpg)
#산점도
ggplot(mpg, aes(x = displ, y = cty)) +
geom_point()
??ggplot
??ggplot
#라이브러리 설치
install.packages("ggstatsplot")
install.packages("shiny")
runExample("01_hello")
library(shiny)
runExample("01_hello")
#데이터 가공
#dplyr
library(dplyr)
data(iris)
str(iris)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>% filter(sepa.length >= 5)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>% filter(sepal.length >= 5)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>% filter(Sepal.length >= 5)
data(iris)
str(iris)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>% filter(Sepal.length >= 5)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>% filter(Sepal.Length >= 5)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>%
filter(Sepal.Length >= 5) %>%
SELECT(Sepal.Length, Petal.Length,Species)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>%
filter(Sepal.Length >= 5) %>%
select(Sepal.Length, Petal.Length,Species)
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>%
filter(Sepal.Length >= 5) %>%
select(Sepal.Length, Petal.Length,Species) %>%
group_by(Species) %>%
summarise(total = sum(Sepal.Length)),
avg = mean(Sepal.Length))
#filter 조건문, 행추출
#sepal.length가 5이상인 데이터만 추출
# %>% 연결 연산자
data2 = iris %>%
filter(Sepal.Length >= 5) %>%
select(Sepal.Length, Petal.Length,Species) %>%
group_by(Species) %>%
summarise(total = sum(Sepal.Length),
avg = mean(Sepal.Length))
data2
ID
ID = c(1,2,3)
ID
install.packages("readxl")
install.packages("writexl")
ggplot(data, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
ID = c("A", "B", "C")
ID
ID = c(1,2,3)
ID
library(ggplot2)
data = iris
ggplot(data, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
plot(cars)
ID = c("A", "B", "C")
ID
ID = c(1,2,3)
ID
write.csv(data, file = "iris.csv")
library(writexl)
write_xlsx(iris, path = "iris.xlsx")
library(ggplot2)
data = iris
ggplot(data, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
iris2 = read.csv(file = 'iris.csv')
iris2 = read.csv(file = 'iris.csv')
str(iris2)
head(iris3)
library(readxl)
iris3 = read_xls(path = 'iris.xlsx')
library(readxl)
iris3 = read_xls(path = 'iris.xlsx')
library(readxl)
iris3 = read_xlsx(path = 'iris.xlsx')
head(iris3)
ID = c("A", "B", "C")
ID
ID = c(1,2,3)
ID
library(ggplot2)
data = iris
ggplot(data, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
write.csv(data, file = "iris.csv")
library(writexl)
write_xlsx(iris, path = "iris.xlsx")
iris2 = read.csv(file = 'iris.csv')
str(iris2)
library(readxl)
iris3 = read_xlsx(path = 'iris.xlsx')
head(iris3)
ID = c(1, 2, 3, 4, 5, 6, 7, 8, 9)
NAME = c("최유진", "마시로", "샤오팅", "김채형", "김다연", "히카루", "바히에", "서영은", "강예서")
AGE = c(25, 22, 22, 20, 19, 18, 17, 17, 16)
NATION = c("한국", "일본", "중국", "한국", "한국", "일본", "한국/미국", "한국", "한국")
POSITION = c("리더", "부리더", "메인댄서", "메인보컬", "메인댄서", "메인래퍼", "서브보컬", "메인보컬", "서브댄서")
kepler = data.frame(
"ID"       = ID,
"NAME"     = NAME,
"AGE"      = AGE,
"NATION"   = NATION,
"POSITION" = POSITION
)
str(kepler)
dim(kepler)
ls(kepler)
head(kepler)
write.csv(kepler, file = 'kepler.csv')
library(writexl)
write_xlsx(kepler, path = 'kepler.xlsx')
library(readxl)
kepler1 = read_xlsx(path = "kepler.xlsx")
str(kepler1)
kepler2 = read.csv(file = "kepler.csv")
str(kepler2)
library(dplyr)
result = kepler1 %>% rename("출생지" = "NATION")
str(result)
kepler1 %>% select(NAME, AGE)
# 코드 작성
# 코드 작성
filter(kepler1, nation == "일본")
# 코드 작성
filter(kepler1, NATION == "일본")
# 코드 작성
filter(kepler1, NATION == "일본")
# 코드 작성
filter(kepler1, NATION == "일본")
# 코드 작성
filter(kepler1, "출생지" == "일본")
library(ggplot2)
ggplot(kepler1, aes(x = AGE, y = AGE))
# 코드 작성
# 코드 작성
ggplot(kepler1, aes(x=AGE)) + geom_bar(width = 0.5)
library(ggplot2)
ggplot(kepler1, aes(AGE)) + geom_histogram()
# 코드 작성
# 코드 작성
head(kipler1)
# 코드 작성
head(mpg)
# 코드 작성
data("mpg", package = "ggplot2")
head(mpg)
# 코드 작성
data("mpg", package = "ggplot2")
select(mpg)
# 코드 작성
data("mpg", package = "ggplot2")
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cry))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mean(class))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mpg, mean(class))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mpg, mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mpg, mean(cty))
ID
# 코드 작성
data("mpg", package = "ggplot2")
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
filter(mpg, cty) %>%
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
select(cty) %>%
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
select(cty) %>%
distinct(mpg, cty) %>%
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
distinct(mpg, cty) %>%
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
group_by(mpg, cty)
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty)
# 코드 작성
data("mpg", package = "ggplot2")
#mpg %>%
#arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty)
#summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty) %>%
summarise(cty_mean, cty_mean1 = mean(cty), n_distinct(class))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty) %>%
summarise(cty_mean, cty1 = mean(cty), n_distinct(class))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty) %>%
summarise(cty_mean, cty1 = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty) %>%
summarise(mpg, cty1 = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
cty_mean <- group_by(mpg, cty)
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
aggregate(cty, mpg,mean)
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mpg, cty_mean = mean(cty)) %>%
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(mpg, cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty), n_distinct_cty = n_distinct(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
arrange(desc(cty)) %>%
group_by(cty) %>%
summarise(cty_mean = mean(cty), n_distinct_cty = n_distinct(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty), count = n())
# 코드 작성
data("mpg", package = "ggplot2")
viewtest <- (mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty), count = n()))
# 코드 작성
data("mpg", package = "ggplot2")
mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty), count = n())
viewtest <- (mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
summarise(cty_mean = mean(cty), count = n()))
str(iris)
iris %>% select(Species)
iris %>% select(Species)
iris %>% select(Species) %>% head()
iris %>%
rename("종" = "Species") %>% head()
select("종")
iris %>%
rename("종" = "Species") %>%
select(종)
iris %>%
filter(Sepal.Length == 5.1)
iris %>%
filter(Sepal.Length == 5.1)
iris %>%
filter(Sepal.Length == 5.1)
iris %>%
filter(sepal.Length == 5.1)
iris %>% head()
filter(Sepal.Length == 5.1)
filter(Sepal_Length == 5.1)
iris %>%
filter(Sepal_Length == 5.1)
data(iris)
str(iris)
# 코드 작성
ggplot(viewtest, aes(x=cty)) + beom_bar(width = 0.5)
# 코드 작성
ggplot(viewtest, aes(x=cty)) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
viewtest = mpg %>%
group_by(class) %>%
arrange(desc(cty)) %>%
summarise(평균 = mean(cty), count = n())
viewtest
ggplot(viewtest, aes(x=cty)) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=평균)) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=평균)) + geom_bar(width = 1.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=평균)) + geom_bar(width = 0.3)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=평균)) + geom_bar(width = 0.1)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(평균))) + geom_bar(width = 0.1)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(평균))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=평균)) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(평균))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=평균)) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(ceiling(평균)))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(ceiling(평균.2)))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(ceiling(평균, 3.2)))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2)))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2)))) 값 + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2)))값) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2))값)) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2)값))) + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2))))값 + geom_bar(width = 0.5)
# 코드 작성
data("mpg", package = "ggplot2")
ggplot(viewtest, aes(x=factor(round(평균, 3.2)))) + geom_bar(width = 0.5)
